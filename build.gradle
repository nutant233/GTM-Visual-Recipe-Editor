plugins {
    id "idea"
    id "maven-publish"
    id "dev.architectury.loom" version "1.6-SNAPSHOT"
    id "com.diffplug.spotless" version "6.25.0"
}

base {
    archivesName = project.archives_base_name
}

String buildNumber = System.getenv("GITHUB_ACTION_NUMBER")
version = "${mod_version}" + (buildNumber != null ? "-build_${System.getenv("GITHUB_RUN_NUMBER")}" : "")
group = project.maven_group

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()
    forge {
        dataGen {
            mod(mod_id)
        }
    }

    runConfigs.named("data").configure {
        programArg("--existing=" + file("src/main/resources").absolutePath)
    }
}

repositories {
    mavenLocal()
    flatDir {
        dir 'libs'
    }
    mavenCentral()
    maven {
        url 'https://maven.gtceu.com'
        content {
            includeGroup 'com.gregtechceu.gtceu'
        }
    }
    maven {
        url "https://modmaven.dev"
    }
    maven {
        url "https://maven.firstdarkdev.xyz/snapshots/"
    }
    maven {
        url 'https://maven.quiltmc.org/repository/release/'
    }
    maven {
        url 'https://maven.parchmentmc.org'
    }
    maven {
        url "https://api.modrinth.com/maven"
    }
    maven {
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.architectury.dev/"
    }
    maven {
        url "https://maven.saps.dev/releases/"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.ftb.mods"
        }
    }
    maven {
        url "https://maven.tterrag.com/"
        content {
            includeGroup("com.tterrag.registrate")
        }
    }
    maven {
        // Patchouli, JEI
        url "https://maven.blamejared.com/"
    }
    maven { // EMI
        url "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$project.minecraft_version"
    forge "net.minecraftforge:forge:$project.minecraft_version-$project.forge_version"
    mappings loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:$project.minecraft_version+build.$project.quilt_mappings:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-$project.minecraft_version:$project.parchment_mappings@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    }

    modImplementation("com.lowdragmc.ldlib:ldlib-forge-$project.minecraft_version:$project.ldlib_version") { transitive = false }

    modImplementation("com.tterrag.registrate:Registrate:$project.registrate_version")

    modImplementation("dev.latvian.mods:kubejs-forge:$project.kubejs_version")

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:$project.mixinextras_version"))
    implementation("io.github.llamalad7:mixinextras-forge:$project.mixinextras_version")

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    modImplementation("dev.architectury:architectury-forge:${project.architectury_version}")

    modImplementation("dev.toma.configuration:configuration-forge-$project.minecraft_version:$project.configuration_version")

    modImplementation("dev.emi:emi-forge:${project.emi_version}")

    modImplementation("com.gregtechceu.gtceu:gtceu-$project.minecraft_version:$project.gtceu_version") { transitive = false }
}

processResources {
    var properties = [
            "mod_license"      : mod_license,
            "mod_id"           : mod_id,
            "version"          : version,
            "mod_name"         : mod_name,
            "mod_url"          : mod_url,
            "mod_author"       : mod_author,
            "forge_version"    : forge_version.split("\\.")[0],
            "minecraft_version": minecraft_version
    ]
    inputs.properties(properties)

    filesMatching("META-INF/mods.toml") {
        expand properties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(17)
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

spotless {
    encoding 'UTF-8'
    java {
        target 'src/main/java/**/*.java'
        toggleOffOn()
        importOrderFile(file("$rootDir/spotless/spotless.importorder"))
        removeUnusedImports('cleanthat-javaparser-unnecessaryimport')
        endWithNewline()
        eclipse('4.31').configFile(file("$rootDir/spotless/spotless.eclipseformat.xml"))
    }
}